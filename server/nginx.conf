events {
    worker_connections 4096;  # 2048から4096に増加
    use epoll;
    multi_accept on;
}

http {
    include       /opt/nginx-h3/conf/mime.types;
    default_type  application/octet-stream;

    # Performance optimizations
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    keepalive_requests 5000;  # 1000から5000に増加
    
    # Buffer sizes - HTTP/3最適化
    client_body_buffer_size 256k;  # 128kから256kに増加
    client_max_body_size 10m;
    client_header_buffer_size 2k;  # 1kから2kに増加
    large_client_header_buffers 8 8k;  # 4 4kから8 8kに増加
    
    # Timeouts - HTTP/3最適化
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # HTTP/1.1 server (port 80)
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root   /opt/nginx-h3/html;
            index  index.html index.htm;
        }
        
        # Health check endpoint
        location /health {
            add_header Content-Type text/plain;
            return 200 "OK\n";
        }
    }

    # HTTP/2 and HTTP/3 server
    server {
        listen 443 ssl http2;
        listen 443 quic;
        
        server_name localhost;
        
        # Enhanced SSL configuration for 0-RTT optimization
        ssl_certificate /opt/nginx-h3/certs/server.crt;
        ssl_certificate_key /opt/nginx-h3/certs/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        
        # Enhanced session management for 0-RTT - HTTP/3最適化
        ssl_session_cache shared:SSL:100m;  # 50mから100mに増加
        ssl_session_timeout 24h;
        ssl_session_tickets on;
        ssl_session_ticket_key /opt/nginx-h3/certs/ticket.key;
        
        # 0-RTT optimization - HTTP/3最適化
        ssl_early_data on;
        
        # HTTP/3 support - force HTTP/3 when possible
        add_header Alt-Svc 'h3=":443"; ma=86400, h3-29=":443"; ma=86400' always;
        add_header X-Proto $http3 always;
        add_header X-Server-Protocol $server_protocol always;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        location / {
            root   /opt/nginx-h3/html;
            index  index.html index.htm;
        }
        
        # Enhanced echo endpoint for testing with 0-RTT optimization
        location /echo {
            # Force HTTP/3 headers
            add_header Alt-Svc 'h3=":443"; ma=86400, h3-29=":443"; ma=86400' always;
            add_header Content-Type text/plain;
            add_header X-Server-Protocol $server_protocol;
            add_header X-Request-Time $request_time;
            add_header X-Connection-Time $connection_time;
            add_header X-Request-ID $request_id;
            add_header X-Early-Data $ssl_early_data;
            
            # Return detailed response
            return 200 "Hello from nginx! Protocol: $server_protocol, HTTP/3: $http3, Time: $request_time, Early-Data: $ssl_early_data\n";
        }
        
        # Health check endpoint
        location /health {
            add_header Content-Type text/plain;
            return 200 "OK\n";
        }
        
        # Protocol info endpoint
        location /protocol {
            add_header Content-Type application/json;
            return 200 '{"protocol": "$server_protocol", "http3": "$http3", "time": "$request_time", "early_data": "$ssl_early_data"}';
        }
        
        # 0-RTT test endpoint
        location /0rtt-test {
            add_header Content-Type application/json;
            return 200 '{"protocol": "$server_protocol", "early_data": "$ssl_early_data", "session_resumed": "$ssl_session_reused"}';
        }
    }
}