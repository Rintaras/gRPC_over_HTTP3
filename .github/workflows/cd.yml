name: CD

on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
      - 'client/**'
      - 'router/**'
      - 'docker-compose.yml'
      - 'Dockerfile'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive tags
        id: meta
        run: |
          REPO_LOWER=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          echo "repo_lower=${REPO_LOWER}" >> $GITHUB_OUTPUT
          SHORT_SHA=${GITHUB_SHA::7}
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Build & Push server
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.repo_lower }}/server:latest
            ghcr.io/${{ steps.meta.outputs.repo_lower }}/server:${{ steps.meta.outputs.short_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & Push client
        uses: docker/build-push-action@v6
        with:
          context: .
          file: client/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.repo_lower }}/client:latest
            ghcr.io/${{ steps.meta.outputs.repo_lower }}/client:${{ steps.meta.outputs.short_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & Push router
        uses: docker/build-push-action@v6
        with:
          context: .
          file: router/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.repo_lower }}/router:latest
            ghcr.io/${{ steps.meta.outputs.repo_lower }}/router:${{ steps.meta.outputs.short_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  optional-ssh-deploy:
    name: Optional SSH Deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Skip if secrets not set
        if: ${{ !(secrets.DEPLOY_HOST != '' && secrets.DEPLOY_USER != '' && secrets.DEPLOY_KEY != '') }}
        run: echo "Secrets not set. Skipping SSH deploy."

      - name: Install ssh client
        if: ${{ secrets.DEPLOY_HOST != '' && secrets.DEPLOY_USER != '' && secrets.DEPLOY_KEY != '' }}
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Add SSH key
        if: ${{ secrets.DEPLOY_HOST != '' && secrets.DEPLOY_USER != '' && secrets.DEPLOY_KEY != '' }}
        run: |
          mkdir -p ~/.ssh
          echo "${DEPLOY_KEY}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          printf "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Deploy with docker compose
        if: ${{ secrets.DEPLOY_HOST != '' && secrets.DEPLOY_USER != '' && secrets.DEPLOY_KEY != '' }}
        run: |
          ssh -i ~/.ssh/id_ed25519 ${DEPLOY_USER}@${DEPLOY_HOST} "docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN && cd ~/gRPC_over_HTTP3 && docker compose pull && docker compose up -d --remove-orphans"

